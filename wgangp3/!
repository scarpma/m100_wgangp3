" Maintainer:	Martino Andrea Scarpolini <scarpma@gmail.com>
" Last change:	2019 Oct 23
"

" Get the defaults that most users want.
"source $VIMRUNTIME/defaults.vim

" For all text files set 'textwidth' to 78 characters.
" autocmd FileType text setlocal textwidth=78


" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

"set showcmd		" Show (partial) command in status line.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned



" INTERACTION
set mouse=a		" Enable mouse usage (all modes)
" set autoinden

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif






" BACKUP
set backupdir=~/.vim_backup
"if has("vms")
"  set nobackup		" do not keep a backup file, use versions instead
"else
"  set backup		" keep a backup file (restore to previous version)
"  if has('persistent_undo')
"    set undofile	" keep an undo file (undo changes after closing)
"  endif
"endif





" OTHER
" quando incolla, mantiene ciÃ² che ho copiato
vnoremap p "_dP 
set encoding=utf-8
set nocompatible
" adds to path variable (dir in which vim searches
" with the command *find*) all the subdirectories of
" the current directory
set path+=**
" shows all file matching
set wildmenu




" info: per vedere il valore di una variabile:
":set variable_name?

" aggiunge clipboard di sistema
"set clipboard=unnamed





" VISUALIZATION
set showmatch		" Show matching brackets.
set background=dark
set nowrap
set ruler
set number
syntax enable
let python_highlight_all=1
"adds permanent filepath to status bar
set statusline+=%F





set tabstop=4
set softtabstop=4
set shiftwidth=4
"set textwidth=79
set expandtab
set autoindent
filetype plugin indent on    " required

"""BEGIN PASTE MODE AUTOMATICALLY
" this disables autoindent when pasting
let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
    set pastetoggle=<Esc>[201~
    set paste
    return ""
endfunction
""" END





"set cursorline 
set nocompatible              " required




" vanilla vim commands for autoclosing brackets
" "inoremap " ""<left>
" "inoremap ' ''<left>
" "inoremap ( ()<left>
" "inoremap [ []<left>
" "inoremap { {}<left>
" "inoremap {<CR> {<CR>}<ESC>O
" "inoremap {;<CR> {<CR>};<ESC>O







" set the runtime path to include Vundle and initialize
"set rtp+=~/.vim/bundle/Vundle.vim
"call vundle#begin()
"
" " alternatively, pass a path where Vundle should install plugins
" "call vundle#begin('~/some/path/here')
"
" " let Vundle manage Vundle, required
" " Plugin 'gmarik/Vundle.vim'
"Plugin 'davidhalter/jedi-vim'
"
" " add all your plugins here (note older versions of Vundle
" " used Bundle instead of Plugin)
"
" ULTISNIPS
"Plugin 'SirVer/ultisnips'
"let g:UltiSnipsExpandTrigger="<tab>"
"let g:UltiSnipsJumpForwardTrigger="<tab>"
"let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
""NEXT THREE LINES FOR SNIPMATE
"Plugin 'MarcWeber/vim-addon-mw-utils'
"Plugin 'tomtom/tlib_vim'
"Plugin 'garbas/vim-snipmate'
"Plugin 'vim-scripts/indentpython.vim'
"Plugin 'vim-syntastic/syntastic'
"Plugin 'nvie/vim-flake8'
"Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

"Bundle 'Valloric/YouCompleteMe'
" " ...
"
" " All of your Plugins must be added before the following line
"call vundle#end()            " required


" correct behaviour of backspace
" e.g. let delete newlines or indentation
set backspace=indent,eol,start


" turn hybrid line numbers on
:set number relativenumber
:set nu rnu




